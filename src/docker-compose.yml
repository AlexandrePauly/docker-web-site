version: "3.8"
services:
  php1:
    image: ${PHP_VERSION}    # Nom de l'image (ici c'est une image officielle)
    container_name: php7.4_1   # Nom du conteneur
    ports:                   # URL sur lequel rediriger la page
      - ${PHP1_PORT}:80
    volumes: 
      - ./:/var/www/html     # Rooting du dossier php vers var/www/html
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db

  php2:
    image: ${PHP_VERSION}    # Nom de l'image (ici c'est une image officielle)
    container_name: php7.4_2   # Nom du conteneur
    ports:                   # URL sur lequel rediriger la page
      - ${PHP2_PORT}:80
    volumes: 
      - ./:/var/www/html     # Rooting du dossier php vers var/www/html
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db

  db:
    image: ${MYSQL_VERSION}         # Nom de l'image (ici c'est une image officielle)
    container_name: mysql8   # Nom du conteneur
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:${DB_PORT}
    volumes:
      - ./sql:/docker-entrypoint-initdb.d # Montage automatique des scripts SQL

  phpma:
    image: ${PHPMYADMIN_VERSION}
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: pass
      UPLOAD_LIMIT: 20M
    ports:
      - ${PHPMYADMIN_PORT}:80
    depends_on:
      - db

  nginx:
    image: ${NGINX_VERSION}
    container_name: nginx-proxy
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php1
      - php2
